{"version":3,"file":"tree-3e3ad5d5.js","sources":["../../../node_modules/.pnpm/@iconify-icons+ri@1.2.7/node_modules/@iconify-icons/ri/restart-line.js","../../../node_modules/.pnpm/@iconify-icons+ep@1.2.11/node_modules/@iconify-icons/ep/add-location.js","../../../src/views/system/user/svg/expand.svg?component","../../../src/views/system/user/svg/unexpand.svg?component","../../../src/views/system/user/tree.vue"],"sourcesContent":["const data = {\n\t\"width\": 24,\n\t\"height\": 24,\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M18.537 19.567A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10c0 2.136-.67 4.116-1.81 5.74L17 12h3a8 8 0 1 0-2.46 5.772l.997 1.795Z\\\"/>\"\n};\nexport default data;\n","const data = {\n\t\"width\": 1024,\n\t\"height\": 1024,\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M288 896h448q32 0 32 32t-32 32H288q-32 0-32-32t32-32z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M800 416a288 288 0 1 0-576 0c0 118.144 94.528 272.128 288 456.576C705.472 688.128 800 534.144 800 416zM512 960C277.312 746.688 160 565.312 160 416a352 352 0 0 1 704 0c0 149.312-117.312 330.688-352 544z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M544 384h96a32 32 0 1 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64h96v-96a32 32 0 0 1 64 0v96z\\\"/>\"\n};\nexport default data;\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  width: \"32\",\n  height: \"32\",\n  viewBox: \"0 0 24 24\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M22 4V2H2v2h9v14.17l-5.5-5.5-1.42 1.41L12 22l7.92-7.92-1.42-1.41-5.5 5.5V4h9Z\"\n}, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_3))\n}\nexport default { render: render }","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  width: \"32\",\n  height: \"32\",\n  viewBox: \"0 0 24 24\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M4 2H2v20h2v-9h14.17l-5.5 5.5 1.41 1.42L22 12l-7.92-7.92-1.41 1.42 5.5 5.5H4V2Z\"\n}, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_3))\n}\nexport default { render: render }","<script setup lang=\"ts\">\nimport { handleTree } from \"@/utils/tree\";\nimport { getDeptList } from \"@/api/system\";\nimport { useRenderIcon } from \"@/components/ReIcon/src/hooks\";\nimport { ref, computed, watch, onMounted, getCurrentInstance } from \"vue\";\n\nimport Dept from \"@iconify-icons/ri/git-branch-line\";\nimport Reset from \"@iconify-icons/ri/restart-line\";\nimport Search from \"@iconify-icons/ep/search\";\nimport More2Fill from \"@iconify-icons/ri/more-2-fill\";\nimport OfficeBuilding from \"@iconify-icons/ep/office-building\";\nimport LocationCompany from \"@iconify-icons/ep/add-location\";\nimport ExpandIcon from \"./svg/expand.svg?component\";\nimport UnExpandIcon from \"./svg/unexpand.svg?component\";\n\ninterface Tree {\n  id: number;\n  name: string;\n  highlight?: boolean;\n  children?: Tree[];\n}\n\nconst treeRef = ref();\nconst treeData = ref([]);\nconst isExpand = ref(true);\nconst searchValue = ref(\"\");\nconst highlightMap = ref({});\nconst { proxy } = getCurrentInstance();\nconst defaultProps = {\n  children: \"children\",\n  label: \"name\"\n};\nconst buttonClass = computed(() => {\n  return [\n    \"!h-[20px]\",\n    \"reset-margin\",\n    \"!text-gray-500\",\n    \"dark:!text-white\",\n    \"dark:hover:!text-primary\"\n  ];\n});\n\nconst filterNode = (value: string, data: Tree) => {\n  if (!value) return true;\n  return data.name.includes(value);\n};\n\nfunction nodeClick(value) {\n  const nodeId = value.$treeNodeId;\n  highlightMap.value[nodeId] = highlightMap.value[nodeId]?.highlight\n    ? Object.assign({ id: nodeId }, highlightMap.value[nodeId], {\n        highlight: false\n      })\n    : Object.assign({ id: nodeId }, highlightMap.value[nodeId], {\n        highlight: true\n      });\n  Object.values(highlightMap.value).forEach((v: Tree) => {\n    if (v.id !== nodeId) {\n      v.highlight = false;\n    }\n  });\n}\n\nfunction toggleRowExpansionAll(status) {\n  isExpand.value = status;\n  const nodes = (proxy.$refs[\"treeRef\"] as any).store._getAllNodes();\n  for (let i = 0; i < nodes.length; i++) {\n    nodes[i].expanded = status;\n  }\n}\n\n/** 重置状态（选中状态、搜索框值、树初始化） */\nfunction onReset() {\n  highlightMap.value = {};\n  searchValue.value = \"\";\n  toggleRowExpansionAll(true);\n}\n\nwatch(searchValue, val => {\n  treeRef.value!.filter(val);\n});\n\nonMounted(async () => {\n  const { data } = await getDeptList();\n  treeData.value = handleTree(data);\n});\n</script>\n\n<template>\n  <div class=\"h-full min-h-[780px] bg-bg_color overflow-auto\">\n    <div class=\"flex items-center h-[34px]\">\n      <p class=\"flex-1 ml-2 font-bold text-base truncate\" title=\"部门列表\">\n        部门列表\n      </p>\n      <el-input\n        style=\"flex: 2\"\n        size=\"small\"\n        v-model=\"searchValue\"\n        placeholder=\"请输入部门名称\"\n        clearable\n      >\n        <template #suffix>\n          <el-icon class=\"el-input__icon\">\n            <IconifyIconOffline\n              v-show=\"searchValue.length === 0\"\n              :icon=\"Search\"\n            />\n          </el-icon>\n        </template>\n      </el-input>\n      <el-dropdown :hide-on-click=\"false\">\n        <IconifyIconOffline\n          class=\"w-[28px] cursor-pointer\"\n          width=\"18px\"\n          :icon=\"More2Fill\"\n        />\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item>\n              <el-button\n                :class=\"buttonClass\"\n                link\n                type=\"primary\"\n                :icon=\"useRenderIcon(isExpand ? ExpandIcon : UnExpandIcon)\"\n                @click=\"toggleRowExpansionAll(isExpand ? false : true)\"\n              >\n                {{ isExpand ? \"折叠全部\" : \"展开全部\" }}\n              </el-button>\n            </el-dropdown-item>\n            <el-dropdown-item>\n              <el-button\n                :class=\"buttonClass\"\n                link\n                type=\"primary\"\n                :icon=\"useRenderIcon(Reset)\"\n                @click=\"onReset\"\n              >\n                重置状态\n              </el-button>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </div>\n    <el-divider />\n    <el-tree\n      ref=\"treeRef\"\n      :data=\"treeData\"\n      node-key=\"id\"\n      size=\"small\"\n      :props=\"defaultProps\"\n      default-expand-all\n      :expand-on-click-node=\"false\"\n      :filter-node-method=\"filterNode\"\n      @node-click=\"nodeClick\"\n    >\n      <template #default=\"{ node, data }\">\n        <span\n          :class=\"[\n            'pl-1',\n            'pr-1',\n            'rounded',\n            'flex',\n            'items-center',\n            'select-none',\n            searchValue.trim().length > 0 &&\n              node.label.includes(searchValue) &&\n              'text-red-500',\n            highlightMap[node.id]?.highlight ? 'dark:text-primary' : ''\n          ]\"\n          :style=\"{\n            background: highlightMap[node.id]?.highlight\n              ? 'var(--el-color-primary-light-7)'\n              : 'transparent'\n          }\"\n        >\n          <IconifyIconOffline\n            :icon=\"\n              data.type === 1\n                ? OfficeBuilding\n                : data.type === 2\n                ? LocationCompany\n                : Dept\n            \"\n          />\n          {{ node.label }}\n        </span>\n      </template>\n    </el-tree>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n:deep(.el-divider) {\n  margin: 0;\n}\n</style>\n"],"names":["data","Reset","LocationCompany","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","render","_ctx","_cache","_openBlock","_createElementBlock","ExpandIcon","UnExpandIcon","treeRef","ref","treeData","isExpand","searchValue","highlightMap","proxy","getCurrentInstance","defaultProps","buttonClass","computed","filterNode","value","nodeClick","nodeId","_a","v","toggleRowExpansionAll","status","nodes","i","onReset","watch","val","onMounted","getDeptList","handleTree"],"mappings":"qdAAA,MAAMA,GAAO,CACZ,MAAS,GACT,OAAU,GACV,KAAQ,gMACT,EACAC,GAAeD,GCLTA,GAAO,CACZ,MAAS,KACT,OAAU,KACV,KAAQ,ycACT,EACAE,GAAeF,GCHTG,GAAa,CACjB,MAAO,KACP,OAAQ,KACR,QAAS,WACX,EACMC,GAA0BC,EAAoB,OAAQ,CAC1D,KAAM,eACN,EAAG,+EACL,EAAG,KAAM,EAAE,EACLC,GAAa,CACjBF,EACF,EAEO,SAASG,GAAOC,EAAMC,EAAQ,CACnC,OAAQC,EAAY,EAAEC,EAAoB,MAAOR,GAAYG,EAAU,CACzE,CACA,MAAeM,GAAA,CAAE,OAAQL,EAAM,EChBzBJ,GAAa,CACjB,MAAO,KACP,OAAQ,KACR,QAAS,WACX,EACMC,GAA0BC,EAAoB,OAAQ,CAC1D,KAAM,eACN,EAAG,iFACL,EAAG,KAAM,EAAE,EACLC,GAAa,CACjBF,EACF,EAEO,SAASG,GAAOC,EAAMC,EAAQ,CACnC,OAAQC,EAAY,EAAEC,EAAoB,MAAOR,GAAYG,EAAU,CACzE,CACA,MAAeO,GAAA,CAAE,OAAQN,EAAM,0QCI/B,MAAMO,EAAUC,IACVC,EAAWD,EAAI,CAAA,CAAE,EACjBE,EAAWF,EAAI,EAAI,EACnBG,EAAcH,EAAI,EAAE,EACpBI,EAAeJ,EAAI,CAAA,CAAE,EACrB,CAAE,MAAAK,GAAUC,IACZC,EAAe,CACnB,SAAU,WACV,MAAO,MAAA,EAEHC,EAAcC,EAAS,IACpB,CACL,YACA,eACA,iBACA,mBACA,0BAAA,CAEH,EAEKC,EAAa,CAACC,EAAe1B,IAC5B0B,EACE1B,EAAK,KAAK,SAAS0B,CAAK,EADZ,GAIrB,SAASC,EAAUD,EAAO,OACxB,MAAME,EAASF,EAAM,YACrBP,EAAa,MAAMS,CAAM,GAAIC,EAAAV,EAAa,MAAMS,CAAM,IAAzB,MAAAC,EAA4B,UACrD,OAAO,OAAO,CAAE,GAAID,CAAA,EAAUT,EAAa,MAAMS,CAAM,EAAG,CACxD,UAAW,EAAA,CACZ,EACD,OAAO,OAAO,CAAE,GAAIA,CAAA,EAAUT,EAAa,MAAMS,CAAM,EAAG,CACxD,UAAW,EAAA,CACZ,EACL,OAAO,OAAOT,EAAa,KAAK,EAAE,QAASW,GAAY,CACjDA,EAAE,KAAOF,IACXE,EAAE,UAAY,GAChB,CACD,CACH,CAEA,SAASC,EAAsBC,EAAQ,CACrCf,EAAS,MAAQe,EACjB,MAAMC,EAASb,EAAM,MAAM,QAAmB,MAAM,eACpD,QAASc,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAC1BD,EAAAC,CAAC,EAAE,SAAWF,CAExB,CAGA,SAASG,GAAU,CACjBhB,EAAa,MAAQ,GACrBD,EAAY,MAAQ,GACpBa,EAAsB,EAAI,CAC5B,CAEA,OAAAK,EAAMlB,EAAoBmB,GAAA,CAChBvB,EAAA,MAAO,OAAOuB,CAAG,CAAA,CAC1B,EAEDC,EAAU,SAAY,CACpB,KAAM,CAAE,KAAAtC,CAAA,EAAS,MAAMuC,IACdvB,EAAA,MAAQwB,EAAWxC,CAAI,CAAA,CACjC","x_google_ignoreList":[0,1]}
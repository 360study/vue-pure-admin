{"version":3,"file":"message-b8b72f1a.js","sources":["../../../src/utils/message.ts"],"sourcesContent":["import { type VNode } from \"vue\";\nimport { isFunction } from \"@pureadmin/utils\";\nimport { type MessageHandler, ElMessage } from \"element-plus\";\n\ntype messageStyle = \"el\" | \"antd\";\ntype messageTypes = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface MessageParams {\n  /** 消息类型，可选 `info` 、`success` 、`warning` 、`error` ，默认 `info` */\n  type?: messageTypes;\n  /** 自定义图标，该属性会覆盖 `type` 的图标 */\n  icon?: any;\n  /** 是否将 `message` 属性作为 `HTML` 片段处理，默认 `false` */\n  dangerouslyUseHTMLString?: boolean;\n  /** 消息风格，可选 `el` 、`antd` ，默认 `antd` */\n  customClass?: messageStyle;\n  /** 显示时间，单位为毫秒。设为 `0` 则不会自动关闭，`element-plus` 默认是 `3000` ，平台改成默认 `2000` */\n  duration?: number;\n  /** 是否显示关闭按钮，默认值 `false` */\n  showClose?: boolean;\n  /** 文字是否居中，默认值 `false` */\n  center?: boolean;\n  /** `Message` 距离窗口顶部的偏移量，默认 `20` */\n  offset?: number;\n  /** 设置组件的根元素，默认 `document.body` */\n  appendTo?: string | HTMLElement;\n  /** 合并内容相同的消息，不支持 `VNode` 类型的消息，默认值 `false` */\n  grouping?: boolean;\n  /** 关闭时的回调函数, 参数为被关闭的 `message` 实例 */\n  onClose?: Function | null;\n}\n\n/** 用法非常简单，参考 src/views/components/message/index.vue 文件 */\n\n/**\n * `Message` 消息提示函数\n */\nconst message = (\n  message: string | VNode | (() => VNode),\n  params?: MessageParams\n): MessageHandler => {\n  if (!params) {\n    return ElMessage({\n      message,\n      customClass: \"pure-message\"\n    });\n  } else {\n    const {\n      icon,\n      type = \"info\",\n      dangerouslyUseHTMLString = false,\n      customClass = \"antd\",\n      duration = 2000,\n      showClose = false,\n      center = false,\n      offset = 20,\n      appendTo = document.body,\n      grouping = false,\n      onClose\n    } = params;\n\n    return ElMessage({\n      message,\n      type,\n      icon,\n      dangerouslyUseHTMLString,\n      duration,\n      showClose,\n      center,\n      offset,\n      appendTo,\n      grouping,\n      // 全局搜 pure-message 即可知道该类的样式位置\n      customClass: customClass === \"antd\" ? \"pure-message\" : \"\",\n      onClose: () => (isFunction(onClose) ? onClose() : null)\n    });\n  }\n};\n\n/**\n * 关闭所有 `Message` 消息提示函数\n */\nconst closeAllMessage = (): void => ElMessage.closeAll();\n\nexport { message, closeAllMessage };\n"],"names":["message","params","icon","type","dangerouslyUseHTMLString","customClass","duration","showClose","center","offset","appendTo","grouping","onClose","ElMessage","isFunction","closeAllMessage"],"mappings":"gDAqCM,MAAAA,EAAU,CACdA,EACAC,IACmB,CACnB,GAAKA,EAKE,CACC,KAAA,CACJ,KAAAC,EACA,KAAAC,EAAO,OACP,yBAAAC,EAA2B,GAC3B,YAAAC,EAAc,OACd,SAAAC,EAAW,IACX,UAAAC,EAAY,GACZ,OAAAC,EAAS,GACT,OAAAC,EAAS,GACT,SAAAC,EAAW,SAAS,KACpB,SAAAC,EAAW,GACX,QAAAC,CACE,EAAAX,EAEJ,OAAOY,EAAU,CACf,QAAAb,EACA,KAAAG,EACA,KAAAD,EACA,yBAAAE,EACA,SAAAE,EACA,UAAAC,EACA,OAAAC,EACA,OAAAC,EACA,SAAAC,EACA,SAAAC,EAEA,YAAaN,IAAgB,OAAS,eAAiB,GACvD,QAAS,IAAOS,EAAWF,CAAO,EAAIA,EAAY,EAAA,IAAA,CACnD,MAjCD,QAAOC,EAAU,CACf,QAAAb,EACA,YAAa,cAAA,CACd,CAgCL,EAKMe,EAAkB,IAAYF,EAAU,SAAS"}